---
apiVersion: v1
kind: Secret  ## 密钥 (Secret) 是一种包含少量敏感信息的资源对象，例如密码、token、秘钥等，以键/值对形式保存并且可以在容器组中使用。
metadata:
  namespace: test  ## 命名空间
  name: minio  ## 名称
  labels: ## 标签
    app: minio
  annotations:
    ## 描述信息
    kubesphere.io/description: minio template
type: Opaque  ## Opaque：base64编码格式的Secret，用来存储密码、密钥等。
data:  ## 数据秘钥，由键值对组成
  username: bWluaW8=  ## echo -n 000000 | base64
  password: bWluaW8xMjM=  ## echo -n 000000 | base64
---
apiVersion: v1
kind: Service  ## 服务 (Service) 是定义了一类容器组的逻辑集合和一个用于访问它们的策略。
metadata:
  namespace: test  ## 命名空间
  name: minio-web  ## 名称
  labels:  ## 服务标签
    app: minio-web
  annotations:
    ## 描述信息
    kubesphere.io/description: minio-web template
spec:
  selector:  ## 指定工作负载
    app: minio  ## 工作负载标签
  ports:  ## 设置容器镜像暴露的端口以及服务端口
    - name: minio-web  ## 名称
      protocol: TCP  ## 协议
      targetPort: 9000  ## 服务端口
      port: 9000  ## 容器端口
      nodePort: 9001  ## 节点端口
  type: NodePort  ## 通过访问集群节点的对应端口来访问服务(NodePort)
  sessionAffinityConfig:  ## 开启回话保持
    clientIP:
      timeoutSeconds: 10800  ## 最大会话保持时间(秒)，会话保持时间默认是 10800 秒(即 3 小时)
---
apiVersion: v1
kind: Service  ## 服务 (Service) 是定义了一类容器组的逻辑集合和一个用于访问它们的策略。
metadata:
  namespace: test  ## 命名空间
  name: minio  ## 名称
  labels:  ## 服务标签
    app: minio
  annotations:
    ## 描述信息
    kubesphere.io/description: minio template
spec:
  selector:  ## 指定工作负载
    app: minio  ## 工作负载标签
  ports:  ## 设置容器镜像暴露的端口以及服务端口
    - name: minio  ## 名称
      protocol: TCP  ## 协议
      port: 9000  ## 容器端口
  clusterIP: None
  ## 集群内部通过服务的后端Endpoint lP直接访问服务Headless (selector)
  ## 集群不为服务生成IP，集群内部通过服务的后端Endpoint lP直接访问服务。此类型适合后端异构的服务，比如需要区分主从的服务。
  sessionAffinityConfig:  ## 开启回话保持
    clientIP:
      timeoutSeconds: 10800  ## 最大会话保持时间(秒)，会话保持时间默认是 10800 秒(即 3 小时)
---
apiVersion: apps/v1
kind: StatefulSet  ## 工作负载 (Workload) 通常是访问服务的实际载体, 也是对节点日志收集、监控等系统应用的实际运行载体，是对一组容器组 (Pod) 的抽象模型
metadata:
  namespace: test  ## 命名空间
  name: minio  ## 名称
  labels:  ## 应用标签
    app: minio
  annotations:
    ## 描述信息
    kubesphere.io/description: minio template
spec:
  replicas: 4  ## 容器组副本数量
  serviceName: minio  ## 管理StatefulSet的服务的名称
  selector:
    matchLabels:  ## 应用标签
      app: minio
  template:
    metadata:
      labels:  ## 应用标签
        app: minio
    spec:
#      nodeSelector:  ## 匹配节点
#        app: minio  ## 匹配节点标签
      terminationGracePeriodSeconds: 0  ## 优雅地终止容器，默认30秒。
      restartPolicy: Always  ## 容器重启策略，Always、OnFailure和Never。默认值是Always。
      containers:
        - name: minio
          imagePullPolicy: IfNotPresent
          ## IfNotPresent：优先使用本地镜像，如果本地存在镜像就优先使用本地镜像
          ## Always：尝试重新下载镜像，在创建及更新时，每次都会尝试下载新的镜像
          ## Never：仅使用本地镜像，仅会使用本地镜像，如果本地不存在所需镜像，则会导致容器异常
          image: swr.cn-north-1.myhuaweicloud.com/kongyu/minio:RELEASE.2021-02-14T04-01-33Z  ## 镜像
          ports:  ## 端口设置
            - name: minio  ## 名称
              protocol: TCP  ## 协议
              containerPort: 9000  ## 容器端口
#          resources:  ## 设置容器的资源限制与资源预留，这将能够帮助系统更好地调度容器，提高稳定性。
#            requests:  ## 资源预留
#              cpu: '0.5'
#              memory: 512Mi
#            limits:  ## 资源限制
#              cpu: '1'
#              memory: 1024Mi
          command:  ## 容器启动命令
            - "/bin/sh"
            - "-ce"
            - "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server http://minio-{0...3}.minio/data"
          env:  ## 容器环境变量
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef: ## 从secret中导入值
                  name: minio
                  key: username
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef: ## 从secret中导入值
                  name: minio
                  key: password
          volumeMounts:  ## 存储卷挂载
            - name: data  ## 匹配存储卷
              mountPath: /data  ## 存储卷挂载路径
            - name: localtime  ## 匹配存储卷
              mountPath: /etc/localtime  ## 存储卷挂载路径
              readOnly: true  ## 只读挂载
      volumes: ## 存储卷
        - name: localtime  ## 同步主机时间
          hostPath: ## 从宿主机挂载
            type: File  ## 文件类型
            path: /etc/localtime  ## 宿主机路径
  volumeClaimTemplates:  ## StatefulSet专属声明PVC
    - metadata:
        name: data  ## PVC名称前缀
      spec:
        accessModes: [ "ReadWriteOnce" ]  ## 访问模式
        storageClassName: local  ## 存储类型(StorageClass)是由集群管理员配置存储服务端参数，并按类型提供存储给集群用户使用。
        resources:
          requests:
            storage: 10Gi  ## 存储卷容量

