apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: minio
  namespace: velero
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      # We only deploy minio to the specified nodes. select your nodes by using `kubectl label node hostname1 -l minio-server=true`
      nodeSelector:
        minio-server: "true"
      # This is to maximize network performance, the headless service can be used to connect to a random host.
      hostNetwork: true
      # We're just using a hostpath. This path must be the same on all servers, and should be the largest, fastest block device you can fit.
      volumes:
      - name: storage
        hostPath:
          path: /tmp/export/
      containers:
      - name: minio
        env:
        - name: MINIO_ACCESS_KEY
          value: "v9rwqYzXXim6KJKeyPm344"
        - name: MINIO_SECRET_KEY
          value: "0aIRBu9KU7gAN0luoX8uBE1eKWNPDgMnkVqbPC"
        image: minio/minio:RELEASE.2020-05-08T02-40-49Z
        # Unfortunately you must manually define each server. Perhaps autodiscovery via DNS can be implemented in the future.
        args:
        - server
        - http://host{1...4}/data/minio
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: /data/minio/
